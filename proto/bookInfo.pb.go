// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bookInfo.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BookRequest struct {
	BookNum              uint32   `protobuf:"varint,1,opt,name=BookNum,proto3" json:"BookNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookRequest) Reset()         { *m = BookRequest{} }
func (m *BookRequest) String() string { return proto.CompactTextString(m) }
func (*BookRequest) ProtoMessage()    {}
func (*BookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70ee3164192093bd, []int{0}
}

func (m *BookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookRequest.Unmarshal(m, b)
}
func (m *BookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookRequest.Marshal(b, m, deterministic)
}
func (m *BookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookRequest.Merge(m, src)
}
func (m *BookRequest) XXX_Size() int {
	return xxx_messageInfo_BookRequest.Size(m)
}
func (m *BookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BookRequest proto.InternalMessageInfo

func (m *BookRequest) GetBookNum() uint32 {
	if m != nil {
		return m.BookNum
	}
	return 0
}

type BookResponse struct {
	PageCount            uint32   `protobuf:"varint,1,opt,name=PageCount,proto3" json:"PageCount,omitempty"`
	BookName             string   `protobuf:"bytes,2,opt,name=BookName,proto3" json:"BookName,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=Author,proto3" json:"Author,omitempty"`
	Price                string   `protobuf:"bytes,4,opt,name=Price,proto3" json:"Price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookResponse) Reset()         { *m = BookResponse{} }
func (m *BookResponse) String() string { return proto.CompactTextString(m) }
func (*BookResponse) ProtoMessage()    {}
func (*BookResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70ee3164192093bd, []int{1}
}

func (m *BookResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookResponse.Unmarshal(m, b)
}
func (m *BookResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookResponse.Marshal(b, m, deterministic)
}
func (m *BookResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookResponse.Merge(m, src)
}
func (m *BookResponse) XXX_Size() int {
	return xxx_messageInfo_BookResponse.Size(m)
}
func (m *BookResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BookResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BookResponse proto.InternalMessageInfo

func (m *BookResponse) GetPageCount() uint32 {
	if m != nil {
		return m.PageCount
	}
	return 0
}

func (m *BookResponse) GetBookName() string {
	if m != nil {
		return m.BookName
	}
	return ""
}

func (m *BookResponse) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *BookResponse) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func init() {
	proto.RegisterType((*BookRequest)(nil), "proto.BookRequest")
	proto.RegisterType((*BookResponse)(nil), "proto.BookResponse")
}

func init() { proto.RegisterFile("bookInfo.proto", fileDescriptor_70ee3164192093bd) }

var fileDescriptor_70ee3164192093bd = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xca, 0xcf, 0xcf,
	0xf6, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xea,
	0x5c, 0xdc, 0x4e, 0xf9, 0xf9, 0xd9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x12, 0x5c,
	0xec, 0x20, 0xae, 0x5f, 0x69, 0xae, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x6f, 0x10, 0x8c, 0xab, 0x54,
	0xc6, 0xc5, 0x03, 0x51, 0x58, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc3, 0xc5, 0x19, 0x90,
	0x98, 0x9e, 0xea, 0x9c, 0x5f, 0x9a, 0x57, 0x02, 0x55, 0x8b, 0x10, 0x10, 0x92, 0xe2, 0xe2, 0x00,
	0x6b, 0x4c, 0xcc, 0x4d, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf3, 0x85, 0xc4, 0xb8,
	0xd8, 0x1c, 0x4b, 0x4b, 0x32, 0xf2, 0x8b, 0x24, 0x98, 0xc1, 0x32, 0x50, 0x9e, 0x90, 0x08, 0x17,
	0x6b, 0x40, 0x51, 0x66, 0x72, 0xaa, 0x04, 0x0b, 0x58, 0x18, 0xc2, 0x31, 0xf2, 0xe7, 0xe2, 0x77,
	0x82, 0xba, 0x3c, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x86, 0x4b, 0xd0, 0x2d, 0x33,
	0x2f, 0x05, 0x24, 0xe4, 0x54, 0x09, 0x75, 0x9f, 0x90, 0x10, 0xc4, 0x5f, 0x7a, 0x48, 0xbe, 0x91,
	0x12, 0x46, 0x11, 0x83, 0x38, 0x3c, 0x89, 0x0d, 0x2c, 0x66, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x3b, 0x77, 0x0b, 0x7f, 0x11, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookInfoServiceClient is the client API for BookInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookInfoServiceClient interface {
	FindInfoByBookNum(ctx context.Context, in *BookRequest, opts ...grpc.CallOption) (*BookResponse, error)
}

type bookInfoServiceClient struct {
	cc *grpc.ClientConn
}

func NewBookInfoServiceClient(cc *grpc.ClientConn) BookInfoServiceClient {
	return &bookInfoServiceClient{cc}
}

func (c *bookInfoServiceClient) FindInfoByBookNum(ctx context.Context, in *BookRequest, opts ...grpc.CallOption) (*BookResponse, error) {
	out := new(BookResponse)
	err := c.cc.Invoke(ctx, "/proto.BookInfoService/FindInfoByBookNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookInfoServiceServer is the server API for BookInfoService service.
type BookInfoServiceServer interface {
	FindInfoByBookNum(context.Context, *BookRequest) (*BookResponse, error)
}

// UnimplementedBookInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBookInfoServiceServer struct {
}

func (*UnimplementedBookInfoServiceServer) FindInfoByBookNum(ctx context.Context, req *BookRequest) (*BookResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindInfoByBookNum not implemented")
}

func RegisterBookInfoServiceServer(s *grpc.Server, srv BookInfoServiceServer) {
	s.RegisterService(&_BookInfoService_serviceDesc, srv)
}

func _BookInfoService_FindInfoByBookNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookInfoServiceServer).FindInfoByBookNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BookInfoService/FindInfoByBookNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookInfoServiceServer).FindInfoByBookNum(ctx, req.(*BookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BookInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.BookInfoService",
	HandlerType: (*BookInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindInfoByBookNum",
			Handler:    _BookInfoService_FindInfoByBookNum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bookInfo.proto",
}
